<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ptsoft.pts.business.dao.PackageRuleDao" >
  <resultMap id="BaseResultMap" type="com.ptsoft.pts.business.model.vo.PackageRule" >
    <id 	column="ID" 		property="id" 			jdbcType="INTEGER" />
    <result column="CODE" 		property="code" 		jdbcType="VARCHAR" />
    <result column="NAME" 		property="name" 		jdbcType="VARCHAR" />
    <result column="COMPANY_ID" property="company_id" 	jdbcType="INTEGER" />
    <result column="STS" 		property="sts" 			jdbcType="INTEGER" />
    <result column="PRODUCTNM" 	property="productNm"	jdbcType="VARCHAR" />
  </resultMap>
  
  <select id="PackageRule_findByCompIdAndLike" parameterType="map" resultMap="BaseResultMap">
  	select * from 
	(
	      Select r.*,rownum as rn
	      From Sy_Package_Rule r
	      Where r.company_id = #{compId, jdbcType=INTEGER}
	      <if test="searchParam != null and searchParam != ''">
	          And (Lower(r.code) Like Lower(#{searchParam, jdbcType=VARCHAR}) Or Lower(r.name) Like Lower(#{searchParam, jdbcType=VARCHAR}))
	      </if>
	)x
	where x.rn Between #{begin, jdbcType=INTEGER} And #{end, jdbcType=INTEGER}
  </select>
  <select id="PackageRuleMap_getCountByCompIdAndSearch" resultType="int" parameterType="map">
  	select count(r.id)
	From Sy_Package_Rule r
	Where r.company_id = #{compId, jdbcType=INTEGER}
	<if test="searchParam != null and searchParam != ''">
	   And (Lower(r.code) Like Lower(#{searchParam, jdbcType=VARCHAR}) Or Lower(r.name) Like Lower(#{searchParam, jdbcType=VARCHAR}))
	</if>
  </select>
  
  <select id="PackageRule_findAllCanUsed" parameterType="Integer" resultMap="BaseResultMap">
  	Select r.*
  	From Sy_Package_Rule r
  	Where r.sts = 1 And r.company_id = #{compId, jdbcType=INTEGER}
  </select>
  
  <select id="PackageRule_getById" parameterType="Integer" resultMap="BaseResultMap">
  	Select r.*
	From Sy_Package_Rule r
	Where r.id = #{_param, jdbcType=INTEGER} 
  </select>
  
  <select id="PackageRule_getByIdForNum" parameterType="Integer" resultType="Integer">
  	Select count(*) From Sy_Package_Rule Where id = #{_param, jdbcType=INTEGER}
  </select>
  
  <select id="PackageRule_getByCode" parameterType="String" resultMap="BaseResultMap">
  	Select r.*
	From Sy_Package_Rule r
	Where r.code = #{_param, jdbcType=VARCHAR}
  </select>
  
  <insert id="PackageRule_insert" parameterType="com.ptsoft.pts.business.model.vo.PackageRule">
  	<selectKey resultType="int" keyProperty="id" order="BEFORE">
		Select nvl(max(id), 0)+1 from Sy_Package_Rule
    </selectKey>
    Insert Into Sy_Package_Rule(id, code, name, company_id, sts)
    Values(#{id, jdbcType=INTEGER}, #{code, jdbcType=VARCHAR}, #{name, jdbcType=VARCHAR}, 
    	  #{company_id, jdbcType=INTEGER}, #{sts, jdbcType=INTEGER})
  </insert>
  
  <update id="PackageRule_update" parameterType="com.ptsoft.pts.business.model.vo.PackageRule">
  	Update Sy_Package_Rule
  	Set
  	<if test="code != null and code != ''">code = #{code, jdbcType=VARCHAR},</if>
  	<if test="name != null and name != ''">name = #{name, jdbcType=VARCHAR},</if>
  	<if test="company_id != null and company_id != ''">company_id = #{company_id, jdbcType=INTEGER},</if>
  	sts = #{sts, jdbcType=INTEGER}
  	Where id = #{id, jdbcType=INTEGER}
  </update>
  
</mapper>